import React, { useState, useEffect } from 'react'
import { useSelector, useDispatch } from 'react-redux'
import { useRouter } from 'next/router'
import cn from 'classnames'
import Head from 'next/head'
import Link from 'next/link'
import {
  createAddress,
  createOrder,
  setPaymentMethod,
  getCartTotal,
} from '../store/features/cart/cartSlice'
import countriesData from '../public/countries'

function checkout() {
  const [addressName, setAddressName] = useState('')
  const [firstName, setFirstName] = useState('')
  const [lastName, setLastName] = useState('')
  const [companyName, setCompanyName] = useState('')
  const [phoneNumber, setPhoneNumber] = useState('')
  const [streetAddress1, setStreetAddress1] = useState('')
  const [streetAddress2, setStreetAddress2] = useState('')
  const [city, setCity] = useState('')
  const [cityArea, setCityArea] = useState('')
  const [country, setCountry] = useState('4')
  const [postalCode, setPostalCode] = useState('')

  const [payment, setPayment] = useState('')

  const dispatch = useDispatch()
  const router = useRouter()

  const {
    cartItems,
    subtotalPrice,
    totalPrice,
    paymentMethod,
    shippingAddress,
    shippingMethod,
    shippingPrice,
    isAddressSuccess,
    isPaymentSuccess,
    isOrderSuccess,
  } = useSelector((state) => state.cart)

  const shippingId = shippingAddress.id

  useEffect(() => {
    dispatch(getCartTotal())
  }, [shippingPrice])

  

  const handleAdressSubmit = (e) => {
    e.preventDefault()
    dispatch(
      createAddress({
        addressName,
        firstName,
        lastName,
        companyName,
        phoneNumber,
        streetAddress1,
        streetAddress2,
        city,
        cityArea,
        country,
        postalCode,
      })
    )
  }

  const handlePaymentSubmit = (e) => {
    e.preventDefault()
    dispatch(setPaymentMethod(payment))
  }

  const handleOrderSubmit = (e) => {
    e.preventDefault()
    dispatch(
      createOrder({
        cartItems,
        totalPrice,
        paymentMethod,
        shippingId,
        shippingMethod,
        shippingPrice,
      })
    )
  }

  return (
    <div className="container mx-auto">
      <Head>
        <title>Checkout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="mt-10 sm:mt-0">
        <div className="md:grid md:grid-cols-3 md:gap-6">
          <div className="md:col-span-1">
            <div className="px-4 sm:px-0">
              <h3 className="text-lg font-medium leading-6 text-gray-900">
                Address Information
              </h3>
              <p className="mt-1 text-sm text-gray-600">
                Use a permanent address where you can receive order.
              </p>
            </div>
          </div>
          <div className="mt-5 md:col-span-2 md:mt-0">
            <div className="overflow-hidden shadow sm:rounded-md">
              <div className="bg-white px-4 py-5 sm:p-6">
                <div className="grid grid-cols-6 gap-6">
                  <div className="col-span-6">
                    <label
                      htmlFor="address-name"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Address Name
                    </label>
                    <input
                      onChange={(e) => setAddressName(e.target.value)}
                      value={addressName}
                      type="text"
                      name="address-name"
                      id="address-name"
                      autoComplete="address-name"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>
                  <div className="col-span-6 sm:col-span-3">
                    <label
                      htmlFor="first-name"
                      className="block text-sm font-medium text-gray-700"
                    >
                      First name
                    </label>
                    <input
                      onChange={(e) => setFirstName(e.target.value)}
                      value={firstName}
                      type="text"
                      name="first-name"
                      id="first-name"
                      autoComplete="given-name"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6 sm:col-span-3">
                    <label
                      htmlFor="last-name"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Last name
                    </label>
                    <input
                      onChange={(e) => setLastName(e.target.value)}
                      value={lastName}
                      type="text"
                      name="last-name"
                      id="last-name"
                      autoComplete="family-name"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6 sm:col-span-3">
                    <label
                      htmlFor="company-name"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Company name
                    </label>
                    <input
                      onChange={(e) => setCompanyName(e.target.value)}
                      value={companyName}
                      type="text"
                      name="company-name"
                      id="company-name"
                      autoComplete="company-name"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6 sm:col-span-3">
                    <label
                      htmlFor="phone-number"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Phone
                    </label>
                    <input
                      onChange={(e) => setPhoneNumber(e.target.value)}
                      value={phoneNumber}
                      type="tel"
                      name="phone-number"
                      id="phone-number"
                      autoComplete="phone-number"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6">
                    <label
                      htmlFor="street-address-1"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Street address 1
                    </label>
                    <input
                      onChange={(e) => setStreetAddress1(e.target.value)}
                      value={streetAddress1}
                      type="text"
                      name="street-address-1"
                      id="street-address-1"
                      autoComplete="street-address-1"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6">
                    <label
                      htmlFor="street-address-2"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Street address 2
                    </label>
                    <input
                      onChange={(e) => setStreetAddress2(e.target.value)}
                      value={streetAddress2}
                      type="text"
                      name="street-address-2"
                      id="street-address-2"
                      autoComplete="street-address-2"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6 sm:col-span-3">
                    <label
                      htmlFor="city"
                      className="block text-sm font-medium text-gray-700"
                    >
                      City
                    </label>
                    <input
                      onChange={(e) => setCity(e.target.value)}
                      value={city}
                      type="text"
                      name="city"
                      id="city"
                      autoComplete="address-level2"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6 sm:col-span-3 lg:col-span-2">
                    <label
                      htmlFor="region"
                      className="block text-sm font-medium text-gray-700"
                    >
                      State / Province
                    </label>
                    <input
                      onChange={(e) => setCityArea(e.target.value)}
                      value={cityArea}
                      type="text"
                      name="region"
                      id="region"
                      autoComplete="address-level1"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>

                  <div className="col-span-6 sm:col-span-3">
                    <label
                      htmlFor="country"
                      className="block text-sm font-medium text-gray-700"
                    >
                      Country
                    </label>
                    <select
                      defaultValue={country}
                      onChange={(e) => setCountry(e.target.value)}
                      id="country"
                      name="country"
                      autoComplete="country-name"
                      className="mt-1 block w-full rounded-md border border-gray-300 bg-white py-2 px-3 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                    >
                      {countriesData.map((item) => (
                        <option key={item.id} value={item.id}>
                          {item.name}
                        </option>
                      ))}
                    </select>
                  </div>

                  <div className="col-span-6 sm:col-span-3 lg:col-span-2">
                    <label
                      htmlFor="postal-code"
                      className="block text-sm font-medium text-gray-700"
                    >
                      ZIP / Postal code
                    </label>
                    <input
                      onChange={(e) => setPostalCode(e.target.value)}
                      value={postalCode}
                      type="text"
                      name="postal-code"
                      id="postal-code"
                      autoComplete="postal-code"
                      className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    />
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-4 py-3 text-right sm:px-6">
                <button
                  onClick={handleAdressSubmit}
                  type="submit"
                  className="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                >
                  Save
                </button>
                {isAddressSuccess && (
                  <div
                    class="my-3 inline-flex w-full items-center rounded-lg bg-green-100 py-3 px-6 text-base text-green-700"
                    role="alert"
                  >
                    <svg
                      aria-hidden="true"
                      focusable="false"
                      data-prefix="fas"
                      data-icon="check-circle"
                      class="mr-2 h-4 w-4 fill-current"
                      role="img"
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 512 512"
                    >
                      <path
                        fill="currentColor"
                        d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                      ></path>
                    </svg>
                    Address added successfully !
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="hidden sm:block" aria-hidden="true">
        <div className="py-5">
          <div className="border-t border-gray-200" />
        </div>
      </div>

      <div className="mt-10 mb-10 sm:mt-0">
        <div className="md:grid md:grid-cols-3 md:gap-6">
          <div className="md:col-span-1">
            <div className="px-4 sm:px-0">
              <h3 className="text-lg font-medium leading-6 text-gray-900">
                Payment Methods
              </h3>
            </div>
          </div>
          <div className="mt-5 md:col-span-2 md:mt-0">
            <form action="#" method="POST">
              <div className="overflow-hidden shadow sm:rounded-md">
                <div className="space-y-6 bg-white px-4 py-5 sm:p-6">
                  <fieldset>
                    <div className="mt-4 space-y-4">
                      <div className="flex items-center">
                        <input
                          value="Credit Card"
                          checked={payment === 'Credit Card'}
                          onChange={(e) => setPayment(e.target.value)}
                          id="credit-card"
                          name="push-notifications"
                          type="radio"
                          className="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-500"
                        />
                        <label
                          htmlFor="credit-card"
                          className="ml-3 block text-sm font-medium text-gray-700"
                        >
                          Credit Card
                        </label>
                      </div>
                      <div className="flex items-center">
                        <input
                          value="Bank Account"
                          checked={payment === 'Bank Account'}
                          onChange={(e) => setPayment(e.target.value)}
                          id="bank-account"
                          name="push-notifications"
                          type="radio"
                          className="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-500"
                        />
                        <label
                          htmlFor="bank-account"
                          className="ml-3 block text-sm font-medium text-gray-700"
                        >
                          Bank Account
                        </label>
                      </div>
                      <div className="flex items-center">
                        <input
                          value="Paypal"
                          checked={payment === 'Paypal'}
                          onChange={(e) => setPayment(e.target.value)}
                          id="paypal"
                          name="push-notifications"
                          type="radio"
                          className="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-500"
                        />
                        <label
                          htmlFor="paypal"
                          className="ml-3 block text-sm font-medium text-gray-700"
                        >
                          Paypal
                        </label>
                      </div>
                    </div>
                  </fieldset>
                </div>
                <div className="bg-gray-50 px-4 py-3 text-right sm:px-6">
                  <button
                    onClick={handlePaymentSubmit}
                    type="submit"
                    className="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                  >
                    Save
                  </button>
                  {isPaymentSuccess && (
                    <div
                      class="my-3 inline-flex w-full items-center rounded-lg bg-green-100 py-3 px-6 text-base text-green-700"
                      role="alert"
                    >
                      <svg
                        aria-hidden="true"
                        focusable="false"
                        data-prefix="fas"
                        data-icon="check-circle"
                        class="mr-2 h-4 w-4 fill-current"
                        role="img"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 512 512"
                      >
                        <path
                          fill="currentColor"
                          d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                        ></path>
                      </svg>
                      Payment method added successfully !
                    </div>
                  )}
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>

      <div className="hidden sm:block" aria-hidden="true">
        <div className="py-5">
          <div className="border-t border-gray-200" />
        </div>
      </div>

      <div className="mt-10 mb-10 sm:mt-0">
        <div className="md:grid md:grid-cols-3 md:gap-6">
          <div className="md:col-span-1">
            <div className="px-4 sm:px-0">
              <h3 className="text-lg font-medium leading-6 text-gray-900">
                Order Summary
              </h3>
            </div>
          </div>
          <div className="mt-5 md:col-span-2 md:mt-0">
            <div className="overflow-hidden shadow sm:rounded-md">
              <div className="space-y-6 bg-white px-4 py-5 sm:p-6">
                <div className="flex justify-between text-base font-medium text-gray-900">
                  <p>Subtotal</p>
                  <p>${subtotalPrice}</p>
                </div>
                <div className="flex justify-between text-base font-medium text-gray-900">
                  <p>Shipping Price</p>
                  <p>${shippingPrice}</p>
                </div>
                <div className="border-t border-gray-200" />
                <div className="flex justify-between text-base font-medium text-gray-900">
                  <p>Total Price</p>
                  <p>${totalPrice}</p>
                </div>
              </div>
              <div className="bg-gray-50 px-4 py-3 text-center sm:px-6">
                <div className="mt-2">
                  <Link href="/checkout">
                    <a
                      onClick={handleOrderSubmit}
                      className={cn(
                        isAddressSuccess && isPaymentSuccess
                        ? 'bg-indigo-600 hover:bg-indigo-700'
                        : 'bg-gray-500  cursor-not-allowed',
                        'flex items-center justify-center rounded-md border border-transparen px-6 py-3 text-base font-medium text-white shadow-sm'

                      )}

                      
                    >
                      Order
                    </a>
                  </Link>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

// cursor-not-allowed

export default checkout
